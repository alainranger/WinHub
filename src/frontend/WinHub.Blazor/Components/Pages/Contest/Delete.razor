@page "/contests/delete"

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
	<h2>Contest</h2>
	<hr />
	@if (Model == null)
	{
		<p><em>Loading...</em></p>
	}
	else
	{
		<dl class="row">
			<dt class="col-sm-2">Name</dt>
			<dd class="col-sm-10">@Model.Name</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Description</dt>
			<dd class="col-sm-10">@Model.Description</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Start</dt>
			<dd class="col-sm-10">@Model.StartDateTime</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">End</dt>
			<dd class="col-sm-10">@Model.EndDateTime</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Contest date</dt>
			<dd class="col-sm-10">@Model.ContestDateTime</dd>
		</dl>

		<EditForm method="post" Model="Model" OnValidSubmit="DeleteMContest" FormName="delete" Enhance>
			<button type="submit" class="btn btn-danger" disabled="@(Model is null)">Delete</button> |
			<a href="/contests">Back to List</a>
		</EditForm>
	}
</div>

@code {
	private Contest? Model;

	[SupplyParameterFromQuery]
	private Guid Id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Model = await ContestService.GetContestAsync(Id);
		if (Model == null)
		{
			NavigationManager.NavigateTo("notfound");
		}
	}

	private async Task DeleteMContest()
	{
		if (Model != null)
		{
			await ContestService.DeleteContestAsync(Model.Id);
			NavigationManager.NavigateTo("/contests");
		}
	}
}